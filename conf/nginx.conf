events {}

worker_processes auto;

http {

  # Set up basic caching
  proxy_cache_path
    /tmp
    levels=1:2              # Two-level directory hierarchy (quicker disk access)
    keys_zone=api_cache:10m # Zone for the cache keys
    max_size=50m            # Size of the zone (10 MB = ~80,000 keys)
    inactive=1m             # Discard caches for items inactive for this long
    use_temp_path=off;      # No temporary location for cache files (quicker)

  # Cache key used to differentiate cached files
  proxy_cache_key "$scheme$request_method$host$request_uri";
  
  

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  
  server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    location / {
      proxy_pass http://localhost:81;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_hide_header Set-Cookie;
      access_log off;
      add_header Cache-Control public;
      add_header X-Cache-Status $upstream_cache_status;
      proxy_cache             api_cache;
      proxy_cache_key         backend$request_uri;
      proxy_cache_valid       200 302 100d;
      proxy_cache_valid       404      1m;
      proxy_cache_use_stale   error timeout invalid_header;
    }
  }
  
  server {
    listen 81 default_server;
    listen [::]:81 default_server ipv6only=on;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    location / {
      include proxy_params;
      proxy_cache api_cache;
      add_header X-Cache-Status $upstream_cache_status;
      # First attempt to serve request as file, then
      # as directory, then fall back to displaying a 404.
      try_files $uri $uri/ /index.html;
    }
  }
  
  server {
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;

    root /usr/share/nginx/html;
    index index.html index.htm;

    server_name localhost;
    #ssl_certificate api.crt;
    #ssl_certificate_key api.key;

    location / {
      proxy_cache api_cache;
      try_files $uri $uri/ /index.html;
    }
  }
}
