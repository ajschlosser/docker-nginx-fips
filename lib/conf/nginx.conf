# User under which nginx will run
user www-data;
pid /var/run/nginx.pid;

# Sets number of worker processes to the number of auto-detected CPU cores
worker_processes auto;

# Allow a larger number of open file handles
worker_rlimit_nofile 65000;

# Contains settings for processing connections
events {

    # Maximum number of simultaneous connections per worker
    worker_connections 2048;

    # Accept as many connections as possible after a new connection
    multi_accept on;

    # Select event polling method appropriate for Linux
    use epoll;

}

http {

    ########################################
    # DEPENDENCIES
    ########################################

    # Include standard MIME types
    include mime.types;

    ########################################
    # OPTIMIZATION
    ########################################

    # Copy data directly between disk and socket
    sendfile on;

    # Send all header files in one packet instead of one by one
    tcp_nopush on;

    # Disable Nagle's algorithm since the server often sends lots of little files
    tcp_nodelay on;

    ########################################
    # TIMEOUTS
    ########################################

    # Timeouts for keepalive connections and client communication
    keepalive_timeout       60;
    keepalive_requests      65536;
    client_header_timeout   10;
    client_body_timeout     10;
    client_max_body_size    0;
    send_timeout            10;

    # Close connections on non-responding clients
    reset_timedout_connection on;

    ########################################
    # LOGGING
    ########################################

    # Configure logging
    error_log   /var/log/nginx/error.log warn;
    access_log  /var/log/nginx/access.log;

    ########################################
    # COMPRESSION
    ########################################

    # Enable gzip compression for a variety of types
    gzip on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ########################################
    # MISC
    ########################################

    # Maximum size of the types hash tables
    types_hash_max_size 2048;

    # Disable transmission of server information in headers and error messages
    server_tokens off;
    server_name_in_redirect off;

    # Set up basic caching
    proxy_cache_path
    /tmp
    levels=1:2              # Two-level directory hierarchy (quicker disk access)
    keys_zone=api_cache:10m # Zone for the cache keys
    max_size=50m            # Size of the zone (10 MB = ~80,000 keys)
    inactive=1m             # Discard caches for items inactive for this long
    use_temp_path=off;      # No temporary location for cache files (quicker)

    # Cache key used to differentiate cached files
    proxy_cache_key "$scheme$request_method$host$request_uri";

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Default type is JSON unless specified otherwise
    default_type application/json;

    include api-gateway.conf;

}


# events {}
# 
# worker_processes auto;
# 
# http {
# 
#   # Set up basic caching
#   proxy_cache_path
#     /tmp
#     levels=1:2              # Two-level directory hierarchy (quicker disk access)
#     keys_zone=api_cache:10m # Zone for the cache keys
#     max_size=50m            # Size of the zone (10 MB = ~80,000 keys)
#     inactive=1m             # Discard caches for items inactive for this long
#     use_temp_path=off;      # No temporary location for cache files (quicker)
# 
#   # Cache key used to differentiate cached files
#   proxy_cache_key "$scheme$request_method$host$request_uri";
#   
#   
# 
#   ssl_session_cache shared:SSL:10m;
#   ssl_session_timeout 10m;
#   
#   server {
#     listen 80 default_server;
#     listen [::]:80 default_server ipv6only=on;
# 
#     root /usr/local/nginx/html;
#     index index.html index.htm;
# 
#     # Make site accessible from http://localhost/
#     server_name localhost;
# 
#     location / {
#       proxy_pass http://localhost:81;
#       proxy_set_header   Host             $host;
#       proxy_set_header   X-Real-IP        $remote_addr;
#       proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
#       proxy_hide_header Set-Cookie;
#       access_log off;
#       add_header Cache-Control public;
#       add_header X-Cache-Status $upstream_cache_status;
#       proxy_cache             api_cache;
#       proxy_cache_key         backend$request_uri;
#       proxy_cache_valid       200 302 100d;
#       proxy_cache_valid       404      1m;
#       proxy_cache_use_stale   error timeout invalid_header;
#     }
#   }
#   
#   server {
#     listen 81 default_server;
#     listen [::]:81 default_server ipv6only=on;
# 
#     root /usr/local/nginx/html;
#     index index.html index.htm;
# 
#     # Make site accessible from http://localhost/
#     server_name localhost;
# 
#     location / {
#       include proxy_params;
#       proxy_cache api_cache;
#       add_header X-Cache-Status $upstream_cache_status;
#       # First attempt to serve request as file, then
#       # as directory, then fall back to displaying a 404.
#       try_files $uri $uri/ /index.html;
#     }
#   }
#   
#   server {
#     listen 443 ssl;
#     listen [::]:443 ssl ipv6only=on;
# 
#     root /usr/local/nginx/html;
#     index index.html index.htm;
# 
#     server_name localhost;
#     ssl_certificate /usr/local/nginx/conf/ssl_certificates/server.crt;
#     ssl_certificate_key /usr/local/nginx/conf/ssl_certificates/server.key;
# 
#     location / {
#       proxy_cache api_cache;
#       try_files $uri $uri/ /index.html;
#     }
#   }
# }
